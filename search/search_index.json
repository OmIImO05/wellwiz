{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to wellwiz","text":"<p>A developing python package to gather information about the gas and oil wells and know the risk through a map visualization.</p> <ul> <li>Free software: MIT License</li> <li>Documentation: https://OmiimO05.github.io/wellwiz</li> </ul>"},{"location":"#logo","title":"Logo","text":""},{"location":"#aim-of-this-project","title":"Aim of this Project","text":"<p>To acknowledge the location of oil and gas wells to get aware of risk of the water and air quality issues from fracking activities.</p>"},{"location":"#usage","title":"Usage","text":"<p>For easy access launch this notebook from your browser and run it. </p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>To visualize some of the oil and gas wells in Knoxville, TN.</li> <li>To know their names and purpose.</li> <li>To identify the risk of fracking exposure from your location to a nearby gas and oil well.</li> </ul>"},{"location":"#demo","title":"Demo","text":""},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#v001-date","title":"v0.0.1 - Date","text":"<p>Improvement:</p> <ul> <li>TBD</li> </ul> <p>New Features:</p> <ul> <li>TBD</li> </ul>"},{"location":"common/","title":"common module","text":"<p>The common module contains common functions and classes used by the other modules.</p>"},{"location":"contributing/","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>You can contribute in many ways:</p>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/OmiimO05/wellwiz/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with <code>bug</code> and <code>help wanted</code> is open to whoever wants to implement it.</p>"},{"location":"contributing/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with <code>enhancement</code> and <code>help wanted</code> is open to whoever wants to implement it.</p>"},{"location":"contributing/#write-documentation","title":"Write Documentation","text":"<p>wellwiz could always use more documentation, whether as part of the official wellwiz docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/OmiimO05/wellwiz/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions are welcome :)</li> </ul>"},{"location":"contributing/#get-started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up wellwiz for local development.</p> <ol> <li> <p>Fork the wellwiz repo on GitHub.</p> </li> <li> <p>Clone your fork locally:</p> <pre><code>$ git clone git@github.com:your_name_here/wellwiz.git\n</code></pre> </li> <li> <p>Install your local copy into a virtualenv. Assuming you have     virtualenvwrapper installed, this is how you set up your fork for     local development:</p> <pre><code>$ mkvirtualenv wellwiz\n$ cd wellwiz/\n$ python setup.py develop\n</code></pre> </li> <li> <p>Create a branch for local development:</p> <pre><code>$ git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Now you can make your changes locally.</p> </li> <li> <p>When you're done making changes, check that your changes pass flake8     and the tests, including testing other Python versions with tox:</p> <pre><code>$ flake8 wellwiz tests\n$ python setup.py test or pytest\n$ tox\n</code></pre> <p>To get flake8 and tox, just pip install them into your virtualenv.</p> </li> <li> <p>Commit your changes and push your branch to GitHub:</p> <pre><code>$ git add .\n$ git commit -m \"Your detailed description of your changes.\"\n$ git push origin name-of-your-bugfix-or-feature\n</code></pre> </li> <li> <p>Submit a pull request through the GitHub website.</p> </li> </ol>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated.     Put your new functionality into a function with a docstring, and add     the feature to the list in README.rst.</li> <li>The pull request should work for Python 3.8 and later, and     for PyPy. Check https://github.com/OmiimO05/wellwiz/pull_requests and make sure that the tests pass for all     supported Python versions.</li> </ol>"},{"location":"faq/","title":"FAQ","text":""},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#install-from-pypi","title":"Install from PyPI","text":"<p>leafmap is available on PyPI. To install wellwiz, run this command in your terminal:</p> <pre><code>pip install wellwiz\n</code></pre>"},{"location":"installation/#install-from-github","title":"Install from GitHub","text":"<p>To install the development version from GitHub using Git, run the following command in your terminal:</p> <p><pre><code>pip install git+https://github.com/OmiimO05/wellwiz\n</code></pre> This is the preferred method to install wellwiz, as it will always install the most recent stable release.</p> <p>If you don't have pip installed, this Python installation guide can guide you through the process.</p>"},{"location":"installation/#from-sources","title":"From sources","text":"<p>To install wellwiz from sources, run this command in your terminal:</p> <pre><code>pip install git+https://github.com/OmiimO05/wellwiz\n</code></pre>"},{"location":"usage/","title":"Usage","text":"<p>To use wellwiz in a project:</p> <pre><code>import wellwiz\n</code></pre>"},{"location":"wellwiz/","title":"wellwiz module","text":"<p>Main module.</p>"},{"location":"wellwiz/#wellwiz.wellwiz.MapWithCSV","title":"<code> MapWithCSV            (Map)         </code>","text":"<p>Extends ipyleaflet.Map to handle CSV-based geographic data for mapping and risk evaluation.</p> Source code in <code>wellwiz/wellwiz.py</code> <pre><code>class MapWithCSV(Map):\n    \"\"\"\n    Extends ipyleaflet.Map to handle CSV-based geographic data for mapping and risk evaluation.\n    \"\"\"\n\n    def __init__(self, **kwargs):\n        \"\"\"\n        Initializes the map, adds base layers, controls, and preloads CSV data.\n        \"\"\"\n        super().__init__(**kwargs)\n        self.center = (35.8, -86.0)  # Set the initial center of the map\n        self.zoom = 7  # Set the initial zoom level\n        self.scroll_wheel_zoom = True  # Enable scroll wheel zoom\n\n        # Adding the OpenStreetMap layer\n        osm_layer = TileLayer(name='OpenStreetMap', url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\")\n        self.add_layer(osm_layer)\n        self.add_control(LayersControl(position='topright'))\n\n        # Output widget for displaying information\n        self.output_widget = widgets.Output(layout={'border': '1px solid black', 'width': '100%', 'height': '100px'})\n        self.add_control(WidgetControl(widget=self.output_widget, position='bottomleft'))\n\n        self.latlon_display = widgets.Label()  # Create a label to display coordinates\n        self.add_control(WidgetControl(widget=self.latlon_display, position='topright'))\n\n        # Preload CSV data from a URL\n        self.default_csv_url = \"https://raw.githubusercontent.com/OmIImO05/wellwiz/main/csv/Oil%20and%20Gas%20Well%20Permits.csv\"\n        self.csv_data = self.load_csv_data(self.default_csv_url)\n        self.markers = {}\n        self.configure_ui()\n        self.add_latlong_widget()\n\n    def load_csv_data(self, url):\n        \"\"\"\n        Loads CSV data from a specified URL into a DataFrame.\n\n        Parameters:\n            url (str): URL pointing to a CSV file.\n\n        Returns:\n            DataFrame: A DataFrame containing the loaded data.\n        \"\"\"\n        try:\n            return pd.read_csv(url)\n        except Exception as e:\n            print(f\"Failed to load CSV data: {e}\")\n            return pd.DataFrame({'Latitude': [], 'Longitude': []})  # Return an empty DataFrame on failure\n\n    def add_csv_layer(self, csv_url):\n        \"\"\"\n        Loads new CSV data from a URL and updates the map with markers.\n\n        Parameters:\n            csv_url (str): URL to load the CSV data from.\n        \"\"\"\n        self.csv_data = self.load_csv_data(csv_url)\n        for index, row in self.csv_data.iterrows():\n            marker = Marker(location=(row['Latitude'], row['Longitude']), draggable=False)\n            self.markers[marker] = {\n                'Well Name and Number': row['Well Name and Number'],\n                'Purpose af Well': row['Purpose af Well']\n            }\n            marker.on_click(lambda *args, marker=marker, **kwargs: self.on_marker_click(marker, *args, **kwargs))\n            self.add_layer(marker)\n\n    def on_marker_click(self, marker, *args, **kwargs):\n        \"\"\"\n        Handles click events on markers, displaying detailed information.\n\n        Parameters:\n            marker (Marker): The marker that was clicked.\n        \"\"\"\n        with self.output_widget:\n            self.output_widget.clear_output(wait=True)\n            data = self.markers[marker]\n            lat, lon = marker.location\n            print(f\"Latitude: {lat}, Longitude: {lon}\")\n            print(f\"Well Name and Number: {data['Well Name and Number']}\")\n            print(f\"Purpose af Well: {data['Purpose af Well']}\")\n\n\n    def add_latlong_widget(self):\n        \"\"\"\n        Sets up an output widget and interaction handler for displaying lat/lon on map clicks.\n        \"\"\"\n        output = widgets.Output()\n        control = WidgetControl(widget=output, position=\"bottomleft\")\n        self.add_control(control)\n\n        def update_latlon(**kwargs):\n            if kwargs.get('type') == 'click':\n                latlon = kwargs.get('coordinates')\n                if latlon:\n                    with output:\n                        output.clear_output()\n                        print(f\"Lat: {latlon[0]:.4f}, Long: {latlon[1]:.4f}\")\n                        self.risk_button(latlon)\n\n        self.on_interaction(update_latlon)\n\n    def risk_button(self, latlon):\n        \"\"\"\n        Displays a button for initiating risk evaluation based on clicked coordinates.\n\n        Parameters:\n            latlon (tuple): Latitude and Longitude as a tuple.\n        \"\"\"\n        if not hasattr(self, 'output_widget'):\n            self.output_widget = widgets.Output()\n\n        self.output_widget.clear_output()  # Clear previous widgets and outputs\n\n        button = widgets.Button(description=\"Calculate your risk ...\")\n        button.on_click(lambda b: self.evaluate_risk(latlon[0], latlon[1]))\n\n        with self.output_widget:\n            display(button)\n\n\n    def evaluate_risk(self, lat, lon):\n        \"\"\"\n        Evaluates geographic risk based on proximity to CSV data points.\n\n        Parameters:\n            lat (float): Latitude for risk evaluation.\n            lon (float): Longitude for risk evaluation.\n        \"\"\"\n        miles_per_degree = 69.0\n        watch_out_buffer_miles = 0.5\n        cautious_buffer_miles = 2.5\n\n        closest_distance = float('inf')\n        for index, row in self.csv_data.iterrows():\n            dist_lat = abs(row['Latitude'] - lat) * miles_per_degree\n            dist_lon = abs(row['Longitude'] - lon) * miles_per_degree * np.cos(np.radians(lat))\n            distance = np.sqrt(dist_lat**2 + dist_lon**2)\n            if distance &lt; closest_distance:\n                closest_distance = distance\n\n        if closest_distance &lt;= watch_out_buffer_miles:\n            print(\"Watch out, Bro!\")\n        elif closest_distance &lt;= cautious_buffer_miles:\n            print(\"Do not panic but be cautious!\")\n        else:\n            print(\"Take a chill pill.\")\n\n    def configure_ui(self):\n        \"\"\"\n        Configures the user interface for uploading CSV data and managing risk calculations.\n        \"\"\"\n        csv_url_text = widgets.Text(description=\"CSV URL:\", placeholder=\"Enter CSV URL here\", layout=widgets.Layout(width='300px'))\n        csv_add_button = widgets.Button(description=\"Add CSV\")\n        csv_add_button.on_click(lambda b: self.add_csv_layer(csv_url_text.value))\n        control_box = widgets.HBox([csv_url_text, csv_add_button])\n        self.add_control(WidgetControl(widget=control_box, position='topright'))\n\n\n        risk_dropdown = widgets.Dropdown(\n            options=['Select Action', 'Calculate your risk of fracking exposure', 'I am good!'],\n            value='Select Action',\n            disabled=False,\n            style={'description_width': 'initial'}\n        )\n        risk_dropdown.layout.width = '300px'  # Adjust width\n        risk_dropdown.layout.height = 'auto'  # Adjust height to auto\n        risk_dropdown.observe(self.handle_risk_dropdown, names='value')\n        self.add_control(WidgetControl(widget=risk_dropdown, position='topleft'))\n\n    def handle_risk_dropdown(self, change):\n        \"\"\"\n        Handles changes in the risk dropdown.\n\n        Args:\n        change (dict): The change event.\n        \"\"\"\n\n        if change.new == 'Calculate your risk of fracking exposure':\n            self.request_user_coordinates()\n        elif change.new == 'I am good!':\n            with self.output_widget:\n                self.output_widget.clear_output()\n                print(\"No action needed. Enjoy your day!\")\n\n    def request_user_coordinates(self):\n        \"\"\"\n        Requests user coordinates for risk evaluation.\n        \"\"\"\n\n        lat_text = widgets.Text(placeholder='Enter Latitude', description='Latitude:')\n        lon_text = widgets.Text(placeholder='Enter Longitude', description='Longitude:')\n        submit_button = widgets.Button(description='Check Risk')\n        submit_button.on_click(lambda b: self.evaluate_risk(float(lat_text.value), float(lon_text.value)))\n        user_input_ui = widgets.VBox([lat_text, lon_text, submit_button])\n        with self.output_widget:\n            self.output_widget.clear_output(wait=True)\n            display(user_input_ui)\n\n    def evaluate_risk(self, lat, lon):\n        \"\"\"\n        Evaluates the risk based on user coordinates.\n\n        Args:\n            lat (float): Latitude.\n            lon (float): Longitude.\n        \"\"\"\n\n        with self.output_widget:\n            self.output_widget.clear_output(wait=True)\n            if any(np.isclose(self.csv_data['Latitude'], lat, atol=0.01) &amp; np.isclose(self.csv_data['Longitude'], lon, atol=0.01)):\n                print(\"Watch out, Bro!\")\n            else:\n                print(\"Take a chill pill.\")\n</code></pre>"},{"location":"wellwiz/#wellwiz.wellwiz.MapWithCSV.__init__","title":"<code>__init__(self, **kwargs)</code>  <code>special</code>","text":"<p>Initializes the map, adds base layers, controls, and preloads CSV data.</p> Source code in <code>wellwiz/wellwiz.py</code> <pre><code>def __init__(self, **kwargs):\n    \"\"\"\n    Initializes the map, adds base layers, controls, and preloads CSV data.\n    \"\"\"\n    super().__init__(**kwargs)\n    self.center = (35.8, -86.0)  # Set the initial center of the map\n    self.zoom = 7  # Set the initial zoom level\n    self.scroll_wheel_zoom = True  # Enable scroll wheel zoom\n\n    # Adding the OpenStreetMap layer\n    osm_layer = TileLayer(name='OpenStreetMap', url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\")\n    self.add_layer(osm_layer)\n    self.add_control(LayersControl(position='topright'))\n\n    # Output widget for displaying information\n    self.output_widget = widgets.Output(layout={'border': '1px solid black', 'width': '100%', 'height': '100px'})\n    self.add_control(WidgetControl(widget=self.output_widget, position='bottomleft'))\n\n    self.latlon_display = widgets.Label()  # Create a label to display coordinates\n    self.add_control(WidgetControl(widget=self.latlon_display, position='topright'))\n\n    # Preload CSV data from a URL\n    self.default_csv_url = \"https://raw.githubusercontent.com/OmIImO05/wellwiz/main/csv/Oil%20and%20Gas%20Well%20Permits.csv\"\n    self.csv_data = self.load_csv_data(self.default_csv_url)\n    self.markers = {}\n    self.configure_ui()\n    self.add_latlong_widget()\n</code></pre>"},{"location":"wellwiz/#wellwiz.wellwiz.MapWithCSV.add_csv_layer","title":"<code>add_csv_layer(self, csv_url)</code>","text":"<p>Loads new CSV data from a URL and updates the map with markers.</p> <p>Parameters:</p> Name Type Description Default <code>csv_url</code> <code>str</code> <p>URL to load the CSV data from.</p> required Source code in <code>wellwiz/wellwiz.py</code> <pre><code>def add_csv_layer(self, csv_url):\n    \"\"\"\n    Loads new CSV data from a URL and updates the map with markers.\n\n    Parameters:\n        csv_url (str): URL to load the CSV data from.\n    \"\"\"\n    self.csv_data = self.load_csv_data(csv_url)\n    for index, row in self.csv_data.iterrows():\n        marker = Marker(location=(row['Latitude'], row['Longitude']), draggable=False)\n        self.markers[marker] = {\n            'Well Name and Number': row['Well Name and Number'],\n            'Purpose af Well': row['Purpose af Well']\n        }\n        marker.on_click(lambda *args, marker=marker, **kwargs: self.on_marker_click(marker, *args, **kwargs))\n        self.add_layer(marker)\n</code></pre>"},{"location":"wellwiz/#wellwiz.wellwiz.MapWithCSV.add_latlong_widget","title":"<code>add_latlong_widget(self)</code>","text":"<p>Sets up an output widget and interaction handler for displaying lat/lon on map clicks.</p> Source code in <code>wellwiz/wellwiz.py</code> <pre><code>def add_latlong_widget(self):\n    \"\"\"\n    Sets up an output widget and interaction handler for displaying lat/lon on map clicks.\n    \"\"\"\n    output = widgets.Output()\n    control = WidgetControl(widget=output, position=\"bottomleft\")\n    self.add_control(control)\n\n    def update_latlon(**kwargs):\n        if kwargs.get('type') == 'click':\n            latlon = kwargs.get('coordinates')\n            if latlon:\n                with output:\n                    output.clear_output()\n                    print(f\"Lat: {latlon[0]:.4f}, Long: {latlon[1]:.4f}\")\n                    self.risk_button(latlon)\n\n    self.on_interaction(update_latlon)\n</code></pre>"},{"location":"wellwiz/#wellwiz.wellwiz.MapWithCSV.configure_ui","title":"<code>configure_ui(self)</code>","text":"<p>Configures the user interface for uploading CSV data and managing risk calculations.</p> Source code in <code>wellwiz/wellwiz.py</code> <pre><code>def configure_ui(self):\n    \"\"\"\n    Configures the user interface for uploading CSV data and managing risk calculations.\n    \"\"\"\n    csv_url_text = widgets.Text(description=\"CSV URL:\", placeholder=\"Enter CSV URL here\", layout=widgets.Layout(width='300px'))\n    csv_add_button = widgets.Button(description=\"Add CSV\")\n    csv_add_button.on_click(lambda b: self.add_csv_layer(csv_url_text.value))\n    control_box = widgets.HBox([csv_url_text, csv_add_button])\n    self.add_control(WidgetControl(widget=control_box, position='topright'))\n\n\n    risk_dropdown = widgets.Dropdown(\n        options=['Select Action', 'Calculate your risk of fracking exposure', 'I am good!'],\n        value='Select Action',\n        disabled=False,\n        style={'description_width': 'initial'}\n    )\n    risk_dropdown.layout.width = '300px'  # Adjust width\n    risk_dropdown.layout.height = 'auto'  # Adjust height to auto\n    risk_dropdown.observe(self.handle_risk_dropdown, names='value')\n    self.add_control(WidgetControl(widget=risk_dropdown, position='topleft'))\n</code></pre>"},{"location":"wellwiz/#wellwiz.wellwiz.MapWithCSV.evaluate_risk","title":"<code>evaluate_risk(self, lat, lon)</code>","text":"<p>Evaluates the risk based on user coordinates.</p> <p>Parameters:</p> Name Type Description Default <code>lat</code> <code>float</code> <p>Latitude.</p> required <code>lon</code> <code>float</code> <p>Longitude.</p> required Source code in <code>wellwiz/wellwiz.py</code> <pre><code>def evaluate_risk(self, lat, lon):\n    \"\"\"\n    Evaluates the risk based on user coordinates.\n\n    Args:\n        lat (float): Latitude.\n        lon (float): Longitude.\n    \"\"\"\n\n    with self.output_widget:\n        self.output_widget.clear_output(wait=True)\n        if any(np.isclose(self.csv_data['Latitude'], lat, atol=0.01) &amp; np.isclose(self.csv_data['Longitude'], lon, atol=0.01)):\n            print(\"Watch out, Bro!\")\n        else:\n            print(\"Take a chill pill.\")\n</code></pre>"},{"location":"wellwiz/#wellwiz.wellwiz.MapWithCSV.handle_risk_dropdown","title":"<code>handle_risk_dropdown(self, change)</code>","text":"<p>Handles changes in the risk dropdown.</p> <p>change (dict): The change event.</p> Source code in <code>wellwiz/wellwiz.py</code> <pre><code>def handle_risk_dropdown(self, change):\n    \"\"\"\n    Handles changes in the risk dropdown.\n\n    Args:\n    change (dict): The change event.\n    \"\"\"\n\n    if change.new == 'Calculate your risk of fracking exposure':\n        self.request_user_coordinates()\n    elif change.new == 'I am good!':\n        with self.output_widget:\n            self.output_widget.clear_output()\n            print(\"No action needed. Enjoy your day!\")\n</code></pre>"},{"location":"wellwiz/#wellwiz.wellwiz.MapWithCSV.load_csv_data","title":"<code>load_csv_data(self, url)</code>","text":"<p>Loads CSV data from a specified URL into a DataFrame.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>URL pointing to a CSV file.</p> required <p>Returns:</p> Type Description <code>DataFrame</code> <p>A DataFrame containing the loaded data.</p> Source code in <code>wellwiz/wellwiz.py</code> <pre><code>def load_csv_data(self, url):\n    \"\"\"\n    Loads CSV data from a specified URL into a DataFrame.\n\n    Parameters:\n        url (str): URL pointing to a CSV file.\n\n    Returns:\n        DataFrame: A DataFrame containing the loaded data.\n    \"\"\"\n    try:\n        return pd.read_csv(url)\n    except Exception as e:\n        print(f\"Failed to load CSV data: {e}\")\n        return pd.DataFrame({'Latitude': [], 'Longitude': []})  # Return an empty DataFrame on failure\n</code></pre>"},{"location":"wellwiz/#wellwiz.wellwiz.MapWithCSV.on_marker_click","title":"<code>on_marker_click(self, marker, *args, **kwargs)</code>","text":"<p>Handles click events on markers, displaying detailed information.</p> <p>Parameters:</p> Name Type Description Default <code>marker</code> <code>Marker</code> <p>The marker that was clicked.</p> required Source code in <code>wellwiz/wellwiz.py</code> <pre><code>def on_marker_click(self, marker, *args, **kwargs):\n    \"\"\"\n    Handles click events on markers, displaying detailed information.\n\n    Parameters:\n        marker (Marker): The marker that was clicked.\n    \"\"\"\n    with self.output_widget:\n        self.output_widget.clear_output(wait=True)\n        data = self.markers[marker]\n        lat, lon = marker.location\n        print(f\"Latitude: {lat}, Longitude: {lon}\")\n        print(f\"Well Name and Number: {data['Well Name and Number']}\")\n        print(f\"Purpose af Well: {data['Purpose af Well']}\")\n</code></pre>"},{"location":"wellwiz/#wellwiz.wellwiz.MapWithCSV.request_user_coordinates","title":"<code>request_user_coordinates(self)</code>","text":"<p>Requests user coordinates for risk evaluation.</p> Source code in <code>wellwiz/wellwiz.py</code> <pre><code>def request_user_coordinates(self):\n    \"\"\"\n    Requests user coordinates for risk evaluation.\n    \"\"\"\n\n    lat_text = widgets.Text(placeholder='Enter Latitude', description='Latitude:')\n    lon_text = widgets.Text(placeholder='Enter Longitude', description='Longitude:')\n    submit_button = widgets.Button(description='Check Risk')\n    submit_button.on_click(lambda b: self.evaluate_risk(float(lat_text.value), float(lon_text.value)))\n    user_input_ui = widgets.VBox([lat_text, lon_text, submit_button])\n    with self.output_widget:\n        self.output_widget.clear_output(wait=True)\n        display(user_input_ui)\n</code></pre>"},{"location":"wellwiz/#wellwiz.wellwiz.MapWithCSV.risk_button","title":"<code>risk_button(self, latlon)</code>","text":"<p>Displays a button for initiating risk evaluation based on clicked coordinates.</p> <p>Parameters:</p> Name Type Description Default <code>latlon</code> <code>tuple</code> <p>Latitude and Longitude as a tuple.</p> required Source code in <code>wellwiz/wellwiz.py</code> <pre><code>def risk_button(self, latlon):\n    \"\"\"\n    Displays a button for initiating risk evaluation based on clicked coordinates.\n\n    Parameters:\n        latlon (tuple): Latitude and Longitude as a tuple.\n    \"\"\"\n    if not hasattr(self, 'output_widget'):\n        self.output_widget = widgets.Output()\n\n    self.output_widget.clear_output()  # Clear previous widgets and outputs\n\n    button = widgets.Button(description=\"Calculate your risk ...\")\n    button.on_click(lambda b: self.evaluate_risk(latlon[0], latlon[1]))\n\n    with self.output_widget:\n        display(button)\n</code></pre>"},{"location":"examples/folium/","title":"Folium","text":"In\u00a0[7]: Copied! <pre>import wellwiz.folium as wellwiz\n</pre> import wellwiz.folium as wellwiz In\u00a0[8]: Copied! <pre>m = wellwiz.Map(center=[40, -100], zoom=4)\nurl = \"https://github.com/opengeos/datasets/releases/download/raster/srtm90.tif\"\nm.add_raster(url, name=\"SRTM90\", opacity=0.5)\nm\n</pre> m = wellwiz.Map(center=[40, -100], zoom=4) url = \"https://github.com/opengeos/datasets/releases/download/raster/srtm90.tif\" m.add_raster(url, name=\"SRTM90\", opacity=0.5) m Out[8]: Make this Notebook Trusted to load map: File -&gt; Trust Notebook In\u00a0[9]: Copied! <pre>m.save(\"raster.html\")\n</pre> m.save(\"raster.html\")"},{"location":"examples/intro/","title":"Intro","text":"In\u00a0[1]: Copied! <pre>print('Hello World!')\n</pre> print('Hello World!') <pre>Hello World!\n</pre>"},{"location":"examples/well/","title":"Well","text":"<p>CSV to use: https://raw.githubusercontent.com/OmIImO05/wellwiz/main/csv/Oil%26Gas.csv</p> In\u00a0[1]: Copied! <pre>pip install wellwiz\n</pre> pip install wellwiz <pre>Requirement already satisfied: wellwiz in /opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages (0.0.3)\r\nRequirement already satisfied: numpy in /home/runner/.local/lib/python3.11/site-packages (from wellwiz) (1.26.4)\r\n</pre> <pre>Requirement already satisfied: ipyleaflet in /home/runner/.local/lib/python3.11/site-packages (from wellwiz) (0.19.0)\r\nRequirement already satisfied: folium in /home/runner/.local/lib/python3.11/site-packages (from wellwiz) (0.16.0)\r\nRequirement already satisfied: pandas in /home/runner/.local/lib/python3.11/site-packages (from wellwiz) (2.2.2)\r\nRequirement already satisfied: pyshp in /home/runner/.local/lib/python3.11/site-packages (from wellwiz) (2.3.1)\r\nRequirement already satisfied: geopandas in /home/runner/.local/lib/python3.11/site-packages (from wellwiz) (0.14.4)\r\nRequirement already satisfied: localtileserver in /home/runner/.local/lib/python3.11/site-packages (from wellwiz) (0.10.2)\r\nRequirement already satisfied: pylance in /home/runner/.local/lib/python3.11/site-packages (from wellwiz) (0.10.17)\r\nRequirement already satisfied: panel in /home/runner/.local/lib/python3.11/site-packages (from wellwiz) (1.4.2)\r\nRequirement already satisfied: geopy in /home/runner/.local/lib/python3.11/site-packages (from wellwiz) (2.4.1)\r\nRequirement already satisfied: rasterio in /home/runner/.local/lib/python3.11/site-packages (from wellwiz) (1.3.10)\r\nRequirement already satisfied: scipy in /home/runner/.local/lib/python3.11/site-packages (from wellwiz) (1.13.0)\r\nRequirement already satisfied: shapely in /home/runner/.local/lib/python3.11/site-packages (from wellwiz) (2.0.4)\r\nRequirement already satisfied: pyproj in /home/runner/.local/lib/python3.11/site-packages (from wellwiz) (3.6.1)\r\nRequirement already satisfied: SQLAlchemy in /home/runner/.local/lib/python3.11/site-packages (from wellwiz) (2.0.30)\r\nRequirement already satisfied: bokeh in /home/runner/.local/lib/python3.11/site-packages (from wellwiz) (3.4.1)\r\nRequirement already satisfied: poetry in /home/runner/.local/lib/python3.11/site-packages (from wellwiz) (1.8.2)\r\nRequirement already satisfied: Jinja2&gt;=2.9 in /home/runner/.local/lib/python3.11/site-packages (from bokeh-&gt;wellwiz) (3.1.4)\r\nRequirement already satisfied: contourpy&gt;=1.2 in /home/runner/.local/lib/python3.11/site-packages (from bokeh-&gt;wellwiz) (1.2.1)\r\nRequirement already satisfied: packaging&gt;=16.8 in /home/runner/.local/lib/python3.11/site-packages (from bokeh-&gt;wellwiz) (24.0)\r\nRequirement already satisfied: pillow&gt;=7.1.0 in /home/runner/.local/lib/python3.11/site-packages (from bokeh-&gt;wellwiz) (10.3.0)\r\nRequirement already satisfied: PyYAML&gt;=3.10 in /home/runner/.local/lib/python3.11/site-packages (from bokeh-&gt;wellwiz) (6.0.1)\r\nRequirement already satisfied: tornado&gt;=6.2 in /home/runner/.local/lib/python3.11/site-packages (from bokeh-&gt;wellwiz) (6.4)\r\nRequirement already satisfied: xyzservices&gt;=2021.09.1 in /home/runner/.local/lib/python3.11/site-packages (from bokeh-&gt;wellwiz) (2024.4.0)\r\n</pre> <pre>Requirement already satisfied: python-dateutil&gt;=2.8.2 in /home/runner/.local/lib/python3.11/site-packages (from pandas-&gt;wellwiz) (2.9.0.post0)\r\nRequirement already satisfied: pytz&gt;=2020.1 in /home/runner/.local/lib/python3.11/site-packages (from pandas-&gt;wellwiz) (2024.1)\r\nRequirement already satisfied: tzdata&gt;=2022.7 in /home/runner/.local/lib/python3.11/site-packages (from pandas-&gt;wellwiz) (2024.1)\r\n</pre> <pre>Requirement already satisfied: branca&gt;=0.6.0 in /home/runner/.local/lib/python3.11/site-packages (from folium-&gt;wellwiz) (0.7.2)\r\nRequirement already satisfied: requests in /home/runner/.local/lib/python3.11/site-packages (from folium-&gt;wellwiz) (2.31.0)\r\nRequirement already satisfied: fiona&gt;=1.8.21 in /home/runner/.local/lib/python3.11/site-packages (from geopandas-&gt;wellwiz) (1.9.6)\r\nRequirement already satisfied: certifi in /home/runner/.local/lib/python3.11/site-packages (from pyproj-&gt;wellwiz) (2024.2.2)\r\nRequirement already satisfied: geographiclib&lt;3,&gt;=1.52 in /home/runner/.local/lib/python3.11/site-packages (from geopy-&gt;wellwiz) (2.0)\r\nRequirement already satisfied: ipywidgets&lt;9,&gt;=7.6.0 in /home/runner/.local/lib/python3.11/site-packages (from ipyleaflet-&gt;wellwiz) (8.1.2)\r\nRequirement already satisfied: jupyter-leaflet&lt;0.20,&gt;=0.19 in /home/runner/.local/lib/python3.11/site-packages (from ipyleaflet-&gt;wellwiz) (0.19.0)\r\nRequirement already satisfied: traittypes&lt;3,&gt;=0.2.1 in /home/runner/.local/lib/python3.11/site-packages (from ipyleaflet-&gt;wellwiz) (0.2.1)\r\n</pre> <pre>Requirement already satisfied: click in /home/runner/.local/lib/python3.11/site-packages (from localtileserver-&gt;wellwiz) (8.1.7)\r\nRequirement already satisfied: flask&lt;4,&gt;=2.0.0 in /home/runner/.local/lib/python3.11/site-packages (from localtileserver-&gt;wellwiz) (3.0.3)\r\nRequirement already satisfied: Flask-Caching in /home/runner/.local/lib/python3.11/site-packages (from localtileserver-&gt;wellwiz) (2.3.0)\r\nRequirement already satisfied: flask-cors in /home/runner/.local/lib/python3.11/site-packages (from localtileserver-&gt;wellwiz) (4.0.1)\r\nRequirement already satisfied: flask-restx&gt;=0.5.0 in /home/runner/.local/lib/python3.11/site-packages (from localtileserver-&gt;wellwiz) (1.3.0)\r\nRequirement already satisfied: rio-tiler in /home/runner/.local/lib/python3.11/site-packages (from localtileserver-&gt;wellwiz) (6.5.0)\r\nRequirement already satisfied: rio-cogeo in /home/runner/.local/lib/python3.11/site-packages (from localtileserver-&gt;wellwiz) (5.3.0)\r\nRequirement already satisfied: server-thread in /home/runner/.local/lib/python3.11/site-packages (from localtileserver-&gt;wellwiz) (0.2.0)\r\nRequirement already satisfied: scooby in /home/runner/.local/lib/python3.11/site-packages (from localtileserver-&gt;wellwiz) (0.10.0)\r\nRequirement already satisfied: werkzeug in /home/runner/.local/lib/python3.11/site-packages (from localtileserver-&gt;wellwiz) (3.0.3)\r\n</pre> <pre>Requirement already satisfied: param&lt;3.0,&gt;=2.0.0 in /home/runner/.local/lib/python3.11/site-packages (from panel-&gt;wellwiz) (2.1.0)\r\nRequirement already satisfied: pyviz-comms&gt;=2.0.0 in /home/runner/.local/lib/python3.11/site-packages (from panel-&gt;wellwiz) (3.0.2)\r\nRequirement already satisfied: markdown in /home/runner/.local/lib/python3.11/site-packages (from panel-&gt;wellwiz) (3.6)\r\nRequirement already satisfied: markdown-it-py in /home/runner/.local/lib/python3.11/site-packages (from panel-&gt;wellwiz) (3.0.0)\r\nRequirement already satisfied: linkify-it-py in /home/runner/.local/lib/python3.11/site-packages (from panel-&gt;wellwiz) (2.0.3)\r\nRequirement already satisfied: mdit-py-plugins in /home/runner/.local/lib/python3.11/site-packages (from panel-&gt;wellwiz) (0.4.0)\r\n</pre> <pre>Requirement already satisfied: tqdm&gt;=4.48.0 in /home/runner/.local/lib/python3.11/site-packages (from panel-&gt;wellwiz) (4.66.4)\r\nRequirement already satisfied: bleach in /home/runner/.local/lib/python3.11/site-packages (from panel-&gt;wellwiz) (6.1.0)\r\nRequirement already satisfied: typing-extensions in /home/runner/.local/lib/python3.11/site-packages (from panel-&gt;wellwiz) (4.11.0)\r\nRequirement already satisfied: build&lt;2.0.0,&gt;=1.0.3 in /home/runner/.local/lib/python3.11/site-packages (from poetry-&gt;wellwiz) (1.2.1)\r\nRequirement already satisfied: cachecontrol&lt;0.15.0,&gt;=0.14.0 in /home/runner/.local/lib/python3.11/site-packages (from cachecontrol[filecache]&lt;0.15.0,&gt;=0.14.0-&gt;poetry-&gt;wellwiz) (0.14.0)\r\nRequirement already satisfied: cleo&lt;3.0.0,&gt;=2.1.0 in /home/runner/.local/lib/python3.11/site-packages (from poetry-&gt;wellwiz) (2.1.0)\r\nRequirement already satisfied: crashtest&lt;0.5.0,&gt;=0.4.1 in /home/runner/.local/lib/python3.11/site-packages (from poetry-&gt;wellwiz) (0.4.1)\r\nRequirement already satisfied: dulwich&lt;0.22.0,&gt;=0.21.2 in /home/runner/.local/lib/python3.11/site-packages (from poetry-&gt;wellwiz) (0.21.7)\r\nRequirement already satisfied: fastjsonschema&lt;3.0.0,&gt;=2.18.0 in /home/runner/.local/lib/python3.11/site-packages (from poetry-&gt;wellwiz) (2.19.1)\r\nRequirement already satisfied: installer&lt;0.8.0,&gt;=0.7.0 in /home/runner/.local/lib/python3.11/site-packages (from poetry-&gt;wellwiz) (0.7.0)\r\nRequirement already satisfied: keyring&lt;25.0.0,&gt;=24.0.0 in /home/runner/.local/lib/python3.11/site-packages (from poetry-&gt;wellwiz) (24.3.1)\r\nRequirement already satisfied: pexpect&lt;5.0.0,&gt;=4.7.0 in /home/runner/.local/lib/python3.11/site-packages (from poetry-&gt;wellwiz) (4.9.0)\r\nRequirement already satisfied: pkginfo&lt;2.0.0,&gt;=1.9.4 in /home/runner/.local/lib/python3.11/site-packages (from poetry-&gt;wellwiz) (1.10.0)\r\nRequirement already satisfied: platformdirs&lt;5,&gt;=3.0.0 in /home/runner/.local/lib/python3.11/site-packages (from poetry-&gt;wellwiz) (4.2.1)\r\nRequirement already satisfied: poetry-core==1.9.0 in /home/runner/.local/lib/python3.11/site-packages (from poetry-&gt;wellwiz) (1.9.0)\r\nRequirement already satisfied: poetry-plugin-export&lt;2.0.0,&gt;=1.6.0 in /home/runner/.local/lib/python3.11/site-packages (from poetry-&gt;wellwiz) (1.7.1)\r\nRequirement already satisfied: pyproject-hooks&lt;2.0.0,&gt;=1.0.0 in /home/runner/.local/lib/python3.11/site-packages (from poetry-&gt;wellwiz) (1.1.0)\r\nRequirement already satisfied: requests-toolbelt&lt;2.0.0,&gt;=1.0.0 in /home/runner/.local/lib/python3.11/site-packages (from poetry-&gt;wellwiz) (1.0.0)\r\nRequirement already satisfied: shellingham&lt;2.0,&gt;=1.5 in /home/runner/.local/lib/python3.11/site-packages (from poetry-&gt;wellwiz) (1.5.4)\r\nRequirement already satisfied: tomlkit&lt;1.0.0,&gt;=0.11.4 in /home/runner/.local/lib/python3.11/site-packages (from poetry-&gt;wellwiz) (0.12.4)\r\nRequirement already satisfied: trove-classifiers&gt;=2022.5.19 in /home/runner/.local/lib/python3.11/site-packages (from poetry-&gt;wellwiz) (2024.4.10)\r\nRequirement already satisfied: virtualenv&lt;21.0.0,&gt;=20.23.0 in /home/runner/.local/lib/python3.11/site-packages (from poetry-&gt;wellwiz) (20.26.1)\r\n</pre> <pre>Requirement already satisfied: pyarrow&lt;15.0.1,&gt;=12 in /home/runner/.local/lib/python3.11/site-packages (from pylance-&gt;wellwiz) (15.0.0)\r\nRequirement already satisfied: affine in /home/runner/.local/lib/python3.11/site-packages (from rasterio-&gt;wellwiz) (2.4.0)\r\nRequirement already satisfied: attrs in /home/runner/.local/lib/python3.11/site-packages (from rasterio-&gt;wellwiz) (23.2.0)\r\nRequirement already satisfied: cligj&gt;=0.5 in /home/runner/.local/lib/python3.11/site-packages (from rasterio-&gt;wellwiz) (0.7.2)\r\nRequirement already satisfied: snuggs&gt;=1.4.1 in /home/runner/.local/lib/python3.11/site-packages (from rasterio-&gt;wellwiz) (1.4.7)\r\nRequirement already satisfied: click-plugins in /home/runner/.local/lib/python3.11/site-packages (from rasterio-&gt;wellwiz) (1.1.1)\r\nRequirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages (from rasterio-&gt;wellwiz) (65.5.0)\r\n</pre> <pre>Requirement already satisfied: greenlet!=0.4.17 in /home/runner/.local/lib/python3.11/site-packages (from SQLAlchemy-&gt;wellwiz) (3.0.3)\r\n</pre> <pre>Requirement already satisfied: msgpack&lt;2.0.0,&gt;=0.5.2 in /home/runner/.local/lib/python3.11/site-packages (from cachecontrol&lt;0.15.0,&gt;=0.14.0-&gt;cachecontrol[filecache]&lt;0.15.0,&gt;=0.14.0-&gt;poetry-&gt;wellwiz) (1.0.8)\r\nRequirement already satisfied: filelock&gt;=3.8.0 in /home/runner/.local/lib/python3.11/site-packages (from cachecontrol[filecache]&lt;0.15.0,&gt;=0.14.0-&gt;poetry-&gt;wellwiz) (3.14.0)\r\nRequirement already satisfied: rapidfuzz&lt;4.0.0,&gt;=3.0.0 in /home/runner/.local/lib/python3.11/site-packages (from cleo&lt;3.0.0,&gt;=2.1.0-&gt;poetry-&gt;wellwiz) (3.9.0)\r\n</pre> <pre>Requirement already satisfied: urllib3&gt;=1.25 in /home/runner/.local/lib/python3.11/site-packages (from dulwich&lt;0.22.0,&gt;=0.21.2-&gt;poetry-&gt;wellwiz) (2.2.1)\r\n</pre> <pre>Requirement already satisfied: six in /home/runner/.local/lib/python3.11/site-packages (from fiona&gt;=1.8.21-&gt;geopandas-&gt;wellwiz) (1.16.0)\r\nRequirement already satisfied: itsdangerous&gt;=2.1.2 in /home/runner/.local/lib/python3.11/site-packages (from flask&lt;4,&gt;=2.0.0-&gt;localtileserver-&gt;wellwiz) (2.2.0)\r\nRequirement already satisfied: blinker&gt;=1.6.2 in /home/runner/.local/lib/python3.11/site-packages (from flask&lt;4,&gt;=2.0.0-&gt;localtileserver-&gt;wellwiz) (1.8.1)\r\n</pre> <pre>Requirement already satisfied: aniso8601&gt;=0.82 in /home/runner/.local/lib/python3.11/site-packages (from flask-restx&gt;=0.5.0-&gt;localtileserver-&gt;wellwiz) (9.0.1)\r\nRequirement already satisfied: jsonschema in /home/runner/.local/lib/python3.11/site-packages (from flask-restx&gt;=0.5.0-&gt;localtileserver-&gt;wellwiz) (4.22.0)\r\nRequirement already satisfied: importlib-resources in /home/runner/.local/lib/python3.11/site-packages (from flask-restx&gt;=0.5.0-&gt;localtileserver-&gt;wellwiz) (6.4.0)\r\nRequirement already satisfied: comm&gt;=0.1.3 in /home/runner/.local/lib/python3.11/site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet-&gt;wellwiz) (0.2.2)\r\nRequirement already satisfied: ipython&gt;=6.1.0 in /home/runner/.local/lib/python3.11/site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet-&gt;wellwiz) (8.24.0)\r\nRequirement already satisfied: traitlets&gt;=4.3.1 in /home/runner/.local/lib/python3.11/site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet-&gt;wellwiz) (5.14.3)\r\nRequirement already satisfied: widgetsnbextension~=4.0.10 in /home/runner/.local/lib/python3.11/site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet-&gt;wellwiz) (4.0.10)\r\nRequirement already satisfied: jupyterlab-widgets~=3.0.10 in /home/runner/.local/lib/python3.11/site-packages (from ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet-&gt;wellwiz) (3.0.10)\r\n</pre> <pre>Requirement already satisfied: MarkupSafe&gt;=2.0 in /home/runner/.local/lib/python3.11/site-packages (from Jinja2&gt;=2.9-&gt;bokeh-&gt;wellwiz) (2.1.5)\r\nRequirement already satisfied: jaraco.classes in /home/runner/.local/lib/python3.11/site-packages (from keyring&lt;25.0.0,&gt;=24.0.0-&gt;poetry-&gt;wellwiz) (3.4.0)\r\nRequirement already satisfied: importlib-metadata&gt;=4.11.4 in /home/runner/.local/lib/python3.11/site-packages (from keyring&lt;25.0.0,&gt;=24.0.0-&gt;poetry-&gt;wellwiz) (7.1.0)\r\nRequirement already satisfied: SecretStorage&gt;=3.2 in /home/runner/.local/lib/python3.11/site-packages (from keyring&lt;25.0.0,&gt;=24.0.0-&gt;poetry-&gt;wellwiz) (3.3.3)\r\nRequirement already satisfied: jeepney&gt;=0.4.2 in /home/runner/.local/lib/python3.11/site-packages (from keyring&lt;25.0.0,&gt;=24.0.0-&gt;poetry-&gt;wellwiz) (0.8.0)\r\n</pre> <pre>Requirement already satisfied: ptyprocess&gt;=0.5 in /home/runner/.local/lib/python3.11/site-packages (from pexpect&lt;5.0.0,&gt;=4.7.0-&gt;poetry-&gt;wellwiz) (0.7.0)\r\n</pre> <pre>Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /home/runner/.local/lib/python3.11/site-packages (from requests-&gt;folium-&gt;wellwiz) (3.3.2)\r\nRequirement already satisfied: idna&lt;4,&gt;=2.5 in /home/runner/.local/lib/python3.11/site-packages (from requests-&gt;folium-&gt;wellwiz) (3.7)\r\n</pre> <pre>Requirement already satisfied: pyparsing&gt;=2.1.6 in /home/runner/.local/lib/python3.11/site-packages (from snuggs&gt;=1.4.1-&gt;rasterio-&gt;wellwiz) (3.1.2)\r\n</pre> <pre>Requirement already satisfied: distlib&lt;1,&gt;=0.3.7 in /home/runner/.local/lib/python3.11/site-packages (from virtualenv&lt;21.0.0,&gt;=20.23.0-&gt;poetry-&gt;wellwiz) (0.3.8)\r\n</pre> <pre>Requirement already satisfied: webencodings in /home/runner/.local/lib/python3.11/site-packages (from bleach-&gt;panel-&gt;wellwiz) (0.5.1)\r\nRequirement already satisfied: cachelib&lt;0.10.0,&gt;=0.9.0 in /home/runner/.local/lib/python3.11/site-packages (from Flask-Caching-&gt;localtileserver-&gt;wellwiz) (0.9.0)\r\nRequirement already satisfied: uc-micro-py in /home/runner/.local/lib/python3.11/site-packages (from linkify-it-py-&gt;panel-&gt;wellwiz) (1.0.3)\r\n</pre> <pre>Requirement already satisfied: mdurl~=0.1 in /home/runner/.local/lib/python3.11/site-packages (from markdown-it-py-&gt;panel-&gt;wellwiz) (0.1.2)\r\n</pre> <pre>Requirement already satisfied: morecantile&lt;6.0,&gt;=5.0 in /home/runner/.local/lib/python3.11/site-packages (from rio-cogeo-&gt;localtileserver-&gt;wellwiz) (5.3.0)\r\nRequirement already satisfied: pydantic~=2.0 in /home/runner/.local/lib/python3.11/site-packages (from rio-cogeo-&gt;localtileserver-&gt;wellwiz) (2.7.1)\r\nRequirement already satisfied: cachetools in /home/runner/.local/lib/python3.11/site-packages (from rio-tiler-&gt;localtileserver-&gt;wellwiz) (5.3.3)\r\nRequirement already satisfied: color-operations in /home/runner/.local/lib/python3.11/site-packages (from rio-tiler-&gt;localtileserver-&gt;wellwiz) (0.1.3)\r\nRequirement already satisfied: httpx in /home/runner/.local/lib/python3.11/site-packages (from rio-tiler-&gt;localtileserver-&gt;wellwiz) (0.27.0)\r\nRequirement already satisfied: numexpr in /home/runner/.local/lib/python3.11/site-packages (from rio-tiler-&gt;localtileserver-&gt;wellwiz) (2.10.0)\r\nRequirement already satisfied: pystac&gt;=0.5.4 in /home/runner/.local/lib/python3.11/site-packages (from rio-tiler-&gt;localtileserver-&gt;wellwiz) (1.10.1)\r\n</pre> <pre>Requirement already satisfied: uvicorn in /home/runner/.local/lib/python3.11/site-packages (from server-thread-&gt;localtileserver-&gt;wellwiz) (0.29.0)\r\n</pre> <pre>Requirement already satisfied: zipp&gt;=0.5 in /home/runner/.local/lib/python3.11/site-packages (from importlib-metadata&gt;=4.11.4-&gt;keyring&lt;25.0.0,&gt;=24.0.0-&gt;poetry-&gt;wellwiz) (3.18.1)\r\nRequirement already satisfied: decorator in /home/runner/.local/lib/python3.11/site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet-&gt;wellwiz) (5.1.1)\r\nRequirement already satisfied: jedi&gt;=0.16 in /home/runner/.local/lib/python3.11/site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet-&gt;wellwiz) (0.19.1)\r\nRequirement already satisfied: matplotlib-inline in /home/runner/.local/lib/python3.11/site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet-&gt;wellwiz) (0.1.7)\r\nRequirement already satisfied: prompt-toolkit&lt;3.1.0,&gt;=3.0.41 in /home/runner/.local/lib/python3.11/site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet-&gt;wellwiz) (3.0.43)\r\n</pre> <pre>Requirement already satisfied: pygments&gt;=2.4.0 in /home/runner/.local/lib/python3.11/site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet-&gt;wellwiz) (2.18.0)\r\nRequirement already satisfied: stack-data in /home/runner/.local/lib/python3.11/site-packages (from ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet-&gt;wellwiz) (0.6.3)\r\n</pre> <pre>Requirement already satisfied: annotated-types&gt;=0.4.0 in /home/runner/.local/lib/python3.11/site-packages (from pydantic~=2.0-&gt;rio-cogeo-&gt;localtileserver-&gt;wellwiz) (0.6.0)\r\nRequirement already satisfied: pydantic-core==2.18.2 in /home/runner/.local/lib/python3.11/site-packages (from pydantic~=2.0-&gt;rio-cogeo-&gt;localtileserver-&gt;wellwiz) (2.18.2)\r\n</pre> <pre>Requirement already satisfied: cryptography&gt;=2.0 in /home/runner/.local/lib/python3.11/site-packages (from SecretStorage&gt;=3.2-&gt;keyring&lt;25.0.0,&gt;=24.0.0-&gt;poetry-&gt;wellwiz) (42.0.6)\r\n</pre> <pre>Requirement already satisfied: anyio in /home/runner/.local/lib/python3.11/site-packages (from httpx-&gt;rio-tiler-&gt;localtileserver-&gt;wellwiz) (4.3.0)\r\nRequirement already satisfied: httpcore==1.* in /home/runner/.local/lib/python3.11/site-packages (from httpx-&gt;rio-tiler-&gt;localtileserver-&gt;wellwiz) (1.0.5)\r\nRequirement already satisfied: sniffio in /home/runner/.local/lib/python3.11/site-packages (from httpx-&gt;rio-tiler-&gt;localtileserver-&gt;wellwiz) (1.3.1)\r\nRequirement already satisfied: h11&lt;0.15,&gt;=0.13 in /home/runner/.local/lib/python3.11/site-packages (from httpcore==1.*-&gt;httpx-&gt;rio-tiler-&gt;localtileserver-&gt;wellwiz) (0.14.0)\r\n</pre> <pre>Requirement already satisfied: more-itertools in /home/runner/.local/lib/python3.11/site-packages (from jaraco.classes-&gt;keyring&lt;25.0.0,&gt;=24.0.0-&gt;poetry-&gt;wellwiz) (10.2.0)\r\n</pre> <pre>Requirement already satisfied: jsonschema-specifications&gt;=2023.03.6 in /home/runner/.local/lib/python3.11/site-packages (from jsonschema-&gt;flask-restx&gt;=0.5.0-&gt;localtileserver-&gt;wellwiz) (2023.12.1)\r\nRequirement already satisfied: referencing&gt;=0.28.4 in /home/runner/.local/lib/python3.11/site-packages (from jsonschema-&gt;flask-restx&gt;=0.5.0-&gt;localtileserver-&gt;wellwiz) (0.35.1)\r\nRequirement already satisfied: rpds-py&gt;=0.7.1 in /home/runner/.local/lib/python3.11/site-packages (from jsonschema-&gt;flask-restx&gt;=0.5.0-&gt;localtileserver-&gt;wellwiz) (0.18.0)\r\n</pre> <pre>Requirement already satisfied: cffi&gt;=1.12 in /home/runner/.local/lib/python3.11/site-packages (from cryptography&gt;=2.0-&gt;SecretStorage&gt;=3.2-&gt;keyring&lt;25.0.0,&gt;=24.0.0-&gt;poetry-&gt;wellwiz) (1.16.0)\r\n</pre> <pre>Requirement already satisfied: parso&lt;0.9.0,&gt;=0.8.3 in /home/runner/.local/lib/python3.11/site-packages (from jedi&gt;=0.16-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet-&gt;wellwiz) (0.8.4)\r\nRequirement already satisfied: wcwidth in /home/runner/.local/lib/python3.11/site-packages (from prompt-toolkit&lt;3.1.0,&gt;=3.0.41-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet-&gt;wellwiz) (0.2.13)\r\n</pre> <pre>Requirement already satisfied: executing&gt;=1.2.0 in /home/runner/.local/lib/python3.11/site-packages (from stack-data-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet-&gt;wellwiz) (2.0.1)\r\nRequirement already satisfied: asttokens&gt;=2.1.0 in /home/runner/.local/lib/python3.11/site-packages (from stack-data-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet-&gt;wellwiz) (2.4.1)\r\nRequirement already satisfied: pure-eval in /home/runner/.local/lib/python3.11/site-packages (from stack-data-&gt;ipython&gt;=6.1.0-&gt;ipywidgets&lt;9,&gt;=7.6.0-&gt;ipyleaflet-&gt;wellwiz) (0.2.2)\r\nRequirement already satisfied: pycparser in /home/runner/.local/lib/python3.11/site-packages (from cffi&gt;=1.12-&gt;cryptography&gt;=2.0-&gt;SecretStorage&gt;=3.2-&gt;keyring&lt;25.0.0,&gt;=24.0.0-&gt;poetry-&gt;wellwiz) (2.22)\r\n</pre> <pre>Note: you may need to restart the kernel to use updated packages.\n</pre> In\u00a0[2]: Copied! <pre>import wellwiz\n</pre> import wellwiz In\u00a0[3]: Copied! <pre>from wellwiz import MapWithCSV\n</pre> from wellwiz import MapWithCSV In\u00a0[4]: Copied! <pre>m = MapWithCSV()\nm\n</pre> m = MapWithCSV() m Out[4]:"}]}